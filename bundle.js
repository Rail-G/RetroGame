(()=>{"use strict";function e(e,t){const a=[];let s=null;"hero"==e?s=0:"evil"==e&&(s=t-2);for(let e=0;e<t;e++)a.push(s+t*e),a.push(s+1+t*e);return a}function t(e,t){let a=0;const s=[];for(;t>a;){const t=e[Math.floor(Math.random()*e.length)];s.includes(t)||(s.push(t),a++)}return s}const a={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"};class s{constructor(e,t="generic"){if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error("Вам не доступна это команда!")}}class i extends s{constructor(e){super(e),this.attack=25,this.defence=25,this.health=100,this.step=2,this.distance=2,this.type="bowman"}}class l extends s{constructor(e){super(e),this.attack=40,this.defence=10,this.health=100,this.step=4,this.distance=1,this.type="swordsman"}}class r extends s{constructor(e){super(e),this.attack=10,this.defence=40,this.health=100,this.step=1,this.distance=4,this.type="magician"}}class h extends s{constructor(e){super(e),this.attack=25,this.defence=25,this.health=100,this.step=2,this.distance=2,this.type="vampire"}}class n extends s{constructor(e){super(e),this.attack=40,this.defence=10,this.health=100,this.step=4,this.distance=1,this.type="undead"}}class c extends s{constructor(e){super(e),this.attack=10,this.defence=10,this.health=100,this.step=1,this.distance=4,this.type="daemon"}}class o{constructor(e,t){if(!(e instanceof s))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}class d{constructor(){this.characters=[]}add(e){this.characters.push(e)}}function m(e,t,a){t>4&&(t=4);const s=new d,i=function*(e,t){for(;;){const a=Math.floor(Math.random()*e.length),s=Math.floor(Math.random()*t+1),i=new(0,e[a])(s);i.attack=Math.round(i.attack*1.8**(s-1)),i.defence=Math.round(i.defence*1.8**(s-1)),yield i}}(e,t);for(let e=0;e<a;e++)s.add(i.next().value);return s}const p="auto",u="pointer",y="crosshair",v="not-allowed";class f{constructor(e){this.evilTeam=void 0,this.playerTeam=void 0,this.bSize=e,this.calculatedPositions={step:[],distance:[]},this.checkedPlayers={player:{step:[],distance:[]},evil:{step:[],distance:[]}}}getRandomNpc(){const e=Math.floor(Math.random()*this.evilTeam.length);return this.evilTeam[e]}setRandomPosition(e){let t=Math.floor(Math.random()*this.calculatedPositions.step.length);const a=[...this.checkedPlayers.evil.step,...this.checkedPlayers.player.step];for(;a.includes(this.calculatedPositions.step[t]);)t=Math.floor(Math.random()*this.calculatedPositions.step.length);return[this.calculatedPositions.step[t],e]}attackPlayer(e){const t=this.checkedPlayers.player.distance,a={};t.length&&this.playerTeam.forEach((e=>{t.includes(e.position)&&e.character.health<100&&(a[e.position]=e.character.health)}));let s=Object.keys(a)[0];return Object.keys(a).find((e=>{a[e]<a[s]&&(s=e)})),Object.keys(a).length?[s,e]:[this.checkedPlayers.player.distance[Math.floor(Math.random()*this.checkedPlayers.player.distance.length)],e]}calculatePositions(){const e=this.getRandomNpc();for(let t=0;t<this.bSize**2;t++){const a=Math.abs(Math.floor(e.position/this.bSize)-Math.floor(t/this.bSize)),s=Math.abs(Math.floor(e.position%this.bSize)-Math.floor(t%this.bSize)),i=Math.max(a,s);i<=e.character.step&&i>0&&this.calculatedPositions.step.push(t),i<=e.character.distance&&i>0&&this.calculatedPositions.distance.push(t)}return e}checkToPlayerDistance(){for(let e=0;e<this.playerTeam.length;e++)this.calculatedPositions.step.includes(this.playerTeam[e].position)&&this.checkedPlayers.player.step.push(this.playerTeam[e].position),this.calculatedPositions.distance.includes(this.playerTeam[e].position)&&this.checkedPlayers.player.distance.push(this.playerTeam[e].position)}checkToEvilDistance(){for(let e=0;e<this.evilTeam.length;e++)this.calculatedPositions.step.includes(this.evilTeam[e].position)&&this.checkedPlayers.evil.step.push(this.evilTeam[e].position),this.calculatedPositions.distance.includes(this.evilTeam[e].position)&&this.checkedPlayers.evil.distance.push(this.evilTeam[e].position)}healthTeamNpc(){const e=this.checkedPlayers.evil.distance,t={};e.length&&this.evilTeam.forEach((a=>{e.includes(a.position)&&a.character.health<100&&(t[a.position]=a.character.health)}));let a=Object.keys(t)[0];return Object.keys(t).find((e=>{t[e]<t[a]&&(a=e)})),a}getRandomAction(e,t){this.playerTeam=e,this.evilTeam=t,this.calculatedPositions={step:[],distance:[]},this.checkedPlayers={player:{step:[],distance:[]},evil:{step:[],distance:[]}};const a=this.calculatePositions();if(this.checkToPlayerDistance(),this.checkToEvilDistance(),Math.round(Math.random())&&"vampire"==a.character.type){const e=this.healthTeamNpc();if(null!=e)return{health:e}}const s=Math.round(Math.random())?"attack":"step";return this.checkedPlayers.player.distance.length&&"step"!=s?{attack:this.attackPlayer(a)}:{step:this.setRandomPosition(a)}}}class g{static firstInfo=0;static allPoint=0;static saveFirstInfo(e){this.firstInfo=this.firstInfo+e}static calculatePoint(e){const t=e.length,a=e.reduce(((e,t)=>e+t.character.health),0),s=this.firstInfo;return console.log(t,a,s),this.allPoint=this.allPoint+100*t+a+100*s,this.allPoint}}class P{bloodMoon(e){const t=document.querySelector(".board-container");console.log(t),t.style.position="relative",t.style.margin="0 460px";const a=document.createElement("div");return a.classList.add("theendinfo"),a.innerHTML='<span class="losetext" style="font-size: 60px; text-align: center;">--/Внимания/-- КРОВАВАЯ ЛУНА</span>',t.appendChild(a),setTimeout((()=>{document.querySelector(".losetext").remove(),a.innerHTML='<span class="losetext" style="font-size: 3.5rem; text-align: center; animation: moveIn 3s 0s cubic-bezier(.36,0,.06,1) alternate 2;">В этом этаже все враги стали сильнее и ловче</span>',t.appendChild(a)}),5500),setTimeout((()=>{document.querySelector(".theendinfo").remove()}),11e3),e.forEach((e=>{e.character.attack=Math.round(1.3*e.character.attack),e.character.defence=Math.round(1.3*e.character.defence),e.character.step=Math.round(e.character.step+1)})),e}}const C=new class{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const s=document.createElement("div");s.classList.add("cell","map-tile","map-tile-"+(t=e,a=this.boardSize,0===t?"top-left":t<a-1?"top":t==a-1?"top-right":t==a*(a-1)?"bottom-left":t==a**2-1?"bottom-right":t%a==0?"left":t%a==a-1?"right":t>a**2-a?"bottom":"center")),s.addEventListener("mouseenter",(e=>this.onCellEnter(e))),s.addEventListener("mouseleave",(e=>this.onCellLeave(e))),s.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(s)}var t,a;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const l=document.createElement("div");l.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),l.style.width=`${a.character.health}%`,i.appendChild(l),s.appendChild(i),e.appendChild(s)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),console.log(this.newGameListeners),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const s=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a()}))}))}showHealth(e,t){return new Promise((a=>{const s=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("health"),s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}};C.bindToDOM(document.querySelector("#game-container"));const T=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),b=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.playerTeam=this.loadPlayerTeam(this.gamePlay.boardSize,3,3),this.evilTeam=this.loadEvilTeam(this.gamePlay.boardSize,3,3),this.currentCellId=null,this.currentNpc=void 0,this.currentChar=null,this.stepX=void 0,this.stepY=void 0,this.evilTeamStep=new f(this.gamePlay.boardSize),this.antiFast=!0,this.round=0,this.bloodMoonEvent=!0}init(){this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.newGame.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this)),this.gamePlay.addLoadGameListener(this.loadGame.bind(this)),g.saveFirstInfo(this.evilTeam.length)}async onCellClick(s){const i=[...this.playerTeam].find((e=>e.position===s)),l=[...this.evilTeam].find((e=>e.position===s));if(!i||this.currentNpc!=i.character)if(null!=this.currentCellId&&this.gamePlay.deselectCell(this.currentCellId),null!=this.currentChar&&this.gamePlay.deselectCell(this.currentChar),i&&this.antiFast)this.gamePlay.selectCell(s),this.gamePlay.setCursor(u),this.currentCellId=s,this.currentNpc=i.character,this.gamePlay.hideCellTooltip(this.currentCellId);else{let i=!0;if(this.currentNpc&&[...this.evilTeam].some((e=>e.position===s))){if(Math.max(this.stepX,this.stepY)<=this.currentNpc.distance&&0<Math.max(this.stepX,this.stepY)){const e=Math.round(Math.max(this.currentNpc.attack-l.character.defence,.1*this.currentNpc.attack));l.character.health=l.character.health-e,this.currentNpc=void 0,await this.gamePlay.showDamage(s,e),l.character.health<=0&&(this.evilTeam=this.evilTeam.filter((e=>s!=e.position)))}i=!1}if(i&&this.currentChar==s){const e=this.playerTeam.findIndex((e=>e.character==this.currentNpc));this.playerTeam[e].position=this.currentChar,i=!0}if(this.currentChar!=s)return this.currentCellId=null,this.currentChar=null,this.currentNpc=void 0,void this.gamePlay.setCursor(p);if(this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),this.currentCellId=null,this.currentChar=null,this.currentNpc=void 0,this.gamePlay.setCursor(p),this.evilTeam.length){const e=this.evilTeamStep.getRandomAction(this.playerTeam,this.evilTeam);if(e.step)e.step[1].position=e.step[0];else if(e.attack){this.antiFast=!1;const t=this.playerTeam.find((t=>t.position==e.attack[0])),a=Math.round(Math.max(e.attack[1].character.attack-t.character.defence,.1*e.attack[1].character.attack));t.character.health=t.character.health-a,await this.gamePlay.showDamage(e.attack[0],a),t.character.health<=0&&(this.playerTeam=this.playerTeam.filter((t=>e.attack[0]!=t.position))),this.antiFast=!0}else if(e.health){this.antiFast=!1;const t=this.evilTeam.find((t=>t.position==e.health));t.character.health=t.character.health+20,await this.gamePlay.showHealth(e.health,20),this.antiFast=!0}}if(this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),!this.playerTeam.length){const e=document.querySelector(".board-container");e.style.position="relative";const t=document.createElement("div");t.classList.add("theendinfo"),t.innerHTML='<span class="losetext">ПОМЕР</span>',e.appendChild(t)}if(!this.evilTeam.length&&this.round<3){this.round++,this.levelUp(this.playerTeam);const s=t(e("hero",this.gamePlay.boardSize),this.playerTeam.length);for(let e=0;e<s.length;e++)this.playerTeam[e].position=s[e];if(this.evilTeam=this.loadEvilTeam(this.gamePlay.boardSize,3,3),g.saveFirstInfo(this.evilTeam.length),this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),this.bloodMoonEvent&&Math.round(Math.random()-.2)){this.bloodMoonEvent=!1;const e=new P;this.evilTeam=e.bloodMoon(this.evilTeam)}}else if(!this.evilTeam.length){const e=g.calculatePoint(this.playerTeam),t=document.querySelector(".board-container");t.style.position="relative";const a=document.createElement("div");a.classList.add("theendinfo"),a.innerHTML=`<span class="wintext">ПОБЕДА</span><span class="wintext" style="font-size: 25px">Вы заработали ${e} очков</span>`,t.appendChild(a)}}}onCellEnter(e){const t=[...this.playerTeam].find((t=>t.position===e)),a=[...this.evilTeam].find((t=>t.position===e));if(t){const a=t.character,s=`🎖: ${a.level} ⚔ ${a.attack} 🛡 ${a.defence} ❤ ${a.health}`;this.gamePlay.showCellTooltip(s,e)}this.currentNpc&&(this.stepX=Math.abs(Math.floor(this.currentCellId/this.gamePlay.boardSize)-Math.floor(e/this.gamePlay.boardSize)),this.stepY=Math.abs(Math.floor(this.currentCellId%this.gamePlay.boardSize)-Math.floor(e%this.gamePlay.boardSize)),null!=this.currentNpc&&(Math.max(this.stepX,this.stepY)<=this.currentNpc.step&&0<Math.max(this.stepX,this.stepY)?(null!=this.currentChar&&this.gamePlay.deselectCell(this.currentChar),this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor(u),t&&t.position==e&&null!=this.currentChar&&this.gamePlay.deselectCell(e),this.currentChar=e,a&&a.position==e&&(this.gamePlay.deselectCell(e),Math.max(this.stepX,this.stepY)<=this.currentNpc.distance&&0<Math.max(this.stepX,this.stepY)?(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(y)):this.currentChar=null)):Math.max(this.stepX,this.stepY)<=this.currentNpc.distance&&0<Math.max(this.stepX,this.stepY)?(this.gamePlay.setCursor(u),null!=this.currentChar&&this.gamePlay.deselectCell(this.currentChar),a&&a.position==e&&(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(y),this.currentChar=e)):(this.gamePlay.setCursor(v),null!=this.currentChar&&this.gamePlay.deselectCell(this.currentChar))))}onCellLeave(e){this.gamePlay.hideCellTooltip(e)}loadPlayerTeam(a,s,h){const n=m([r,i,l],s,h),c=t(e("hero",a),n.characters.length),d=[];for(let e=0;e<h;e++)d.push(new o(n.characters[e],c[e]));return d}loadEvilTeam(a,s,i){const l=m([h,n,c],s,i),r=t(e("evil",a),l.characters.length),d=[];for(let e=0;e<i;e++)d.push(new o(l.characters[e],r[e]));return d}levelUp(e){return e.forEach((e=>{e.character.level<4&&(e.character.level++,e.character.health<=50&&1!=e.character.health?(e.character.attack=Math.round(1.3*e.character.attack),e.character.defence=Math.round(1.3*e.character.defence)):(e.character.attack=Math.round(Math.max(e.character.attack,e.character.attack*(80+e.character.health)/100)),e.character.defence=Math.round(Math.max(e.character.defence,e.character.defence*(80+e.character.health)/100)))),e.character.health<=20?e.character.health=e.character.health+80:e.character.health=100})),e}newGame(){this.playerTeam=this.loadPlayerTeam(this.gamePlay.boardSize,3,3),this.evilTeam=this.loadEvilTeam(this.gamePlay.boardSize,3,3),this.currentCellId=null,this.currentNpc=void 0,this.currentChar=null,this.stepX=void 0,this.stepY=void 0,this.evilTeamStep=new f(this.gamePlay.boardSize),this.round=0,this.bloodMoonEvent=!0,this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam])}loadGame(){const e=this.stateService.load();this.playerTeam=e.player,this.evilTeam=e.evil,this.round=e.round,this.bloodMoonEvent=e.bloodMoonEvent,this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam])}saveGame(){this.stateService.save({player:this.playerTeam,evil:this.evilTeam,round:this.round,bloodMoonEvent:this.bloodMoonEvent})}}(C,T);b.init()})();