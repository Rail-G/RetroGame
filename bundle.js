(()=>{"use strict";function t(t,e){const a=[];let s=null;"hero"==t?s=0:"evil"==t&&(s=e-2);for(let t=0;t<e;t++)a.push(s+e*t),a.push(s+1+e*t);return a}function e(t,e){let a=0;const s=[];for(;e>a;){const e=t[Math.floor(Math.random()*t.length)];s.includes(e)||(s.push(e),a++)}return s}const a={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"};class s{constructor(t,e="generic"){if(this.level=t,this.attack=0,this.defence=0,this.health=50,this.type=e,"Character"===new.target.name)throw new Error("Вам не доступна это команда!")}}class i extends s{constructor(t){super(t),this.attack=25,this.defence=25,this.health=100,this.step=2,this.distance=2,this.type="bowman"}}class l extends s{constructor(t){super(t),this.attack=40,this.defence=10,this.health=100,this.step=4,this.distance=1,this.type="swordsman"}}class r extends s{constructor(t){super(t),this.attack=10,this.defence=40,this.health=100,this.step=1,this.distance=4,this.type="magician"}}class h extends s{constructor(t){super(t),this.attack=25,this.defence=25,this.health=100,this.step=2,this.distance=2,this.type="vampire"}}class n extends s{constructor(t){super(t),this.attack=40,this.defence=10,this.health=100,this.step=4,this.distance=1,this.type="undead"}}class c extends s{constructor(t){super(t),this.attack=10,this.defence=10,this.health=100,this.step=1,this.distance=4,this.type="daemon"}}class o{constructor(t,e){if(!(t instanceof s))throw new Error("character must be instance of Character or its children");if("number"!=typeof e)throw new Error("position must be a number");this.character=t,this.position=e}}class d{constructor(){this.characters=[]}add(t){this.characters.push(t)}}function m(t,e,a){e>4&&(e=4);const s=new d,i=function*(t,e){for(;;){const a=Math.floor(Math.random()*t.length),s=Math.floor(Math.random()*e+1),i=new(0,t[a])(s);i.attack=Math.round(i.attack*1.8**(s-1)),i.defence=Math.round(i.defence*1.8**(s-1)),yield i}}(t,e);for(let t=0;t<a;t++)s.add(i.next().value);return s}const u="auto",p="pointer",y="crosshair",v="not-allowed";class f{constructor(t){this.evilTeam=void 0,this.playerTeam=void 0,this.bSize=t,this.calculatedPositions={step:[],distance:[]},this.checkedPlayers={player:{step:[],distance:[]},evil:[]}}getRandomNpc(){const t=Math.floor(Math.random()*this.evilTeam.length);return this.evilTeam[t]}setRandomPosition(t){let e=Math.floor(Math.random()*this.calculatedPositions.step.length);const a=[...this.checkedPlayers.evil,...this.checkedPlayers.player.step];for(;a.includes(this.calculatedPositions.step[e]);)e=Math.floor(Math.random()*this.calculatedPositions.step.length);return[this.calculatedPositions.step[e],t]}attackPlayer(t){return[this.checkedPlayers.player.distance[Math.floor(Math.random()*this.checkedPlayers.player.distance.length)],t]}calculatePositions(){const t=this.getRandomNpc();for(let e=0;e<this.bSize**2;e++){const a=Math.abs(Math.floor(t.position/this.bSize)-Math.floor(e/this.bSize)),s=Math.abs(Math.floor(t.position%this.bSize)-Math.floor(e%this.bSize)),i=Math.max(a,s);i<=t.character.step&&i>0&&this.calculatedPositions.step.push(e),i<=t.character.distance&&i>0&&this.calculatedPositions.distance.push(e)}return t}checkToPlayerDistance(){for(let t=0;t<this.playerTeam.length;t++)this.calculatedPositions.step.includes(this.playerTeam[t].position)&&this.checkedPlayers.player.step.push(this.playerTeam[t].position),this.calculatedPositions.distance.includes(this.playerTeam[t].position)&&this.checkedPlayers.player.distance.push(this.playerTeam[t].position)}checkToEvilDistance(){for(let t=0;t<this.evilTeam.length;t++)this.calculatedPositions.step.includes(this.evilTeam[t].position)&&this.checkedPlayers.evil.push(this.evilTeam[t].position)}getRandomAction(t,e){this.playerTeam=t,this.evilTeam=e,this.calculatedPositions={step:[],distance:[]},this.checkedPlayers={player:{step:[],distance:[]},evil:[]};const a=this.calculatePositions();this.checkToPlayerDistance(),this.checkToEvilDistance();const s=Math.round(Math.random())?"attack":"step";return this.checkedPlayers.player.distance.length&&"step"!=s?{attack:this.attackPlayer(a)}:{step:this.setRandomPosition(a)}}}class g{static firstInfo=0;static allPoint=0;static saveFirstInfo(t){this.firstInfo=this.firstInfo+t}static calculatePoint(t){const e=t.length,a=t.reduce(((t,e)=>t+e.character.health),0),s=this.firstInfo;return console.log(e,a,s),this.allPoint=this.allPoint+100*e+a+100*s,this.allPoint}}const C=new class{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(t=>this.onNewGameClick(t))),this.saveGameEl.addEventListener("click",(t=>this.onSaveGameClick(t))),this.loadGameEl.addEventListener("click",(t=>this.onLoadGameClick(t))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const s=document.createElement("div");s.classList.add("cell","map-tile","map-tile-"+(e=t,a=this.boardSize,0===e?"top-left":e<a-1?"top":e==a-1?"top-right":e==a*(a-1)?"bottom-left":e==a**2-1?"bottom-right":e%a==0?"left":e%a==a-1?"right":e>a**2-a?"bottom":"center")),s.addEventListener("mouseenter",(t=>this.onCellEnter(t))),s.addEventListener("mouseleave",(t=>this.onCellLeave(t))),s.addEventListener("click",(t=>this.onCellClick(t))),this.boardEl.appendChild(s)}var e,a;this.cells=Array.from(this.boardEl.children)}redrawPositions(t){for(const t of this.cells)t.innerHTML="";for(const a of t){const t=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const l=document.createElement("div");l.classList.add("health-level-indicator","health-level-indicator-"+((e=a.character.health)<15?"critical":e<50?"normal":"high")),l.style.width=`${a.character.health}%`,i.appendChild(l),s.appendChild(i),t.appendChild(s)}var e}addCellEnterListener(t){this.cellEnterListeners.push(t)}addCellLeaveListener(t){this.cellLeaveListeners.push(t)}addCellClickListener(t){this.cellClickListeners.push(t)}addNewGameListener(t){this.newGameListeners.push(t)}addSaveGameListener(t){this.saveGameListeners.push(t)}addLoadGameListener(t){this.loadGameListeners.push(t)}onCellEnter(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellEnterListeners.forEach((t=>t.call(null,e)))}onCellLeave(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellLeaveListeners.forEach((t=>t.call(null,e)))}onCellClick(t){const e=this.cells.indexOf(t.currentTarget);this.cellClickListeners.forEach((t=>t.call(null,e)))}onNewGameClick(t){t.preventDefault(),console.log(this.newGameListeners),this.newGameListeners.forEach((t=>t.call(null)))}onSaveGameClick(t){t.preventDefault(),this.saveGameListeners.forEach((t=>t.call(null)))}onLoadGameClick(t){t.preventDefault(),this.loadGameListeners.forEach((t=>t.call(null)))}static showError(t){alert(t)}static showMessage(t){alert(t)}selectCell(t,e="yellow"){this.deselectCell(t),this.cells[t].classList.add("selected",`selected-${e}`)}deselectCell(t){const e=this.cells[t];e.classList.remove(...Array.from(e.classList).filter((t=>t.startsWith("selected"))))}showCellTooltip(t,e){this.cells[e].title=t}hideCellTooltip(t){this.cells[t].title=""}showDamage(t,e){return new Promise((a=>{const s=this.cells[t],i=document.createElement("span");i.textContent=e,i.classList.add("damage"),s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a()}))}))}setCursor(t){this.boardEl.style.cursor=t}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}};C.bindToDOM(document.querySelector("#game-container"));const P=new class{constructor(t){this.storage=t}save(t){this.storage.setItem("state",JSON.stringify(t))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(t){throw new Error("Invalid state")}}}(localStorage),T=new class{constructor(t,e){this.gamePlay=t,this.stateService=e,this.playerTeam=this.loadPlayerTeam(this.gamePlay.boardSize,3,3),this.evilTeam=this.loadEvilTeam(this.gamePlay.boardSize,3,3),this.currentCellId=null,this.currentNpc=void 0,this.currentChar=null,this.stepX=void 0,this.stepY=void 0,this.evilTeamStep=new f(this.gamePlay.boardSize),this.antiFast=!0,this.round=0}init(){this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.newGame.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this)),this.gamePlay.addLoadGameListener(this.loadGame.bind(this)),g.saveFirstInfo(this.evilTeam.length)}async onCellClick(s){const i=[...this.playerTeam].find((t=>t.position===s)),l=[...this.evilTeam].find((t=>t.position===s));if(!i||this.currentNpc!=i.character)if(null!=this.currentCellId&&this.gamePlay.deselectCell(this.currentCellId),null!=this.currentChar&&this.gamePlay.deselectCell(this.currentChar),i&&this.antiFast)this.gamePlay.selectCell(s),this.gamePlay.setCursor(p),this.currentCellId=s,this.currentNpc=i.character,this.gamePlay.hideCellTooltip(this.currentCellId);else{let i=!0;if(this.currentNpc&&[...this.evilTeam].some((t=>t.position===s))){if(Math.max(this.stepX,this.stepY)<=this.currentNpc.distance&&0<Math.max(this.stepX,this.stepY)){const t=Math.round(Math.max(this.currentNpc.attack-l.character.defence,.1*this.currentNpc.attack));l.character.health=l.character.health-t,this.currentNpc=void 0,await this.gamePlay.showDamage(s,t),l.character.health<=0&&(this.evilTeam=this.evilTeam.filter((t=>s!=t.position)))}i=!1}if(i&&this.currentChar==s){const t=this.playerTeam.findIndex((t=>t.character==this.currentNpc));this.playerTeam[t].position=this.currentChar,i=!0}if(this.currentChar!=s)return this.currentCellId=null,this.currentChar=null,this.currentNpc=void 0,void this.gamePlay.setCursor(u);if(this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),this.currentCellId=null,this.currentChar=null,this.currentNpc=void 0,this.gamePlay.setCursor(u),this.evilTeam.length){const t=this.evilTeamStep.getRandomAction(this.playerTeam,this.evilTeam);if(t.step)t.step[1].position=t.step[0];else if(t.attack){this.antiFast=!1;const e=this.playerTeam.find((e=>e.position==t.attack[0])),a=Math.round(Math.max(t.attack[1].character.attack-e.character.defence,.1*t.attack[1].character.attack));e.character.health=e.character.health-a,await this.gamePlay.showDamage(t.attack[0],a),e.character.health<=0&&(this.playerTeam=this.playerTeam.filter((e=>t.attack[0]!=e.position))),this.antiFast=!0}}if(this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam]),!this.playerTeam.length){const t=document.querySelector(".board-container");t.style.position="relative";const e=document.createElement("div");e.classList.add("theendinfo");const a=document.createElement("span");a.textContent="ПОМЕР",a.classList.add("losetext"),e.appendChild(a),t.appendChild(e)}if(!this.evilTeam.length&&this.round<3){this.round++,this.levelUp(this.playerTeam);const s=e(t("hero",this.gamePlay.boardSize),this.playerTeam.length);for(let t=0;t<s.length;t++)this.playerTeam[t].position=s[t];this.evilTeam=this.loadEvilTeam(this.gamePlay.boardSize,3,3),g.saveFirstInfo(this.evilTeam.length),this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam])}else if(!this.evilTeam.length){console.log(g.calculatePoint(this.playerTeam));const t=document.querySelector(".board-container");t.style.position="relative";const e=document.createElement("div");e.classList.add("theendinfo");const a=document.createElement("span");a.textContent="ПОБЕДА",a.classList.add("wintext"),e.appendChild(a),t.appendChild(e)}}}onCellEnter(t){const e=[...this.playerTeam].find((e=>e.position===t)),a=[...this.evilTeam].find((e=>e.position===t));if(e){const a=e.character,s=`🎖: ${a.level} ⚔ ${a.attack} 🛡 ${a.defence} ❤ ${a.health}`;this.gamePlay.showCellTooltip(s,t)}this.currentNpc&&(this.stepX=Math.abs(Math.floor(this.currentCellId/this.gamePlay.boardSize)-Math.floor(t/this.gamePlay.boardSize)),this.stepY=Math.abs(Math.floor(this.currentCellId%this.gamePlay.boardSize)-Math.floor(t%this.gamePlay.boardSize)),null!=this.currentNpc&&(Math.max(this.stepX,this.stepY)<=this.currentNpc.step&&0<Math.max(this.stepX,this.stepY)?(null!=this.currentChar&&this.gamePlay.deselectCell(this.currentChar),this.gamePlay.selectCell(t,"green"),this.gamePlay.setCursor(p),e&&e.position==t&&this.gamePlay.deselectCell(t),this.currentChar=t,a&&a.position==t&&(this.gamePlay.deselectCell(t),Math.max(this.stepX,this.stepY)<=this.currentNpc.distance&&0<Math.max(this.stepX,this.stepY)?(this.gamePlay.selectCell(t,"red"),this.gamePlay.setCursor(y)):this.currentChar=null)):Math.max(this.stepX,this.stepY)<=this.currentNpc.distance&&0<Math.max(this.stepX,this.stepY)?(this.gamePlay.setCursor(p),this.gamePlay.deselectCell(this.currentChar),a&&a.position==t&&(this.gamePlay.selectCell(t,"red"),this.gamePlay.setCursor(y),this.currentChar=t)):(this.gamePlay.setCursor(v),this.gamePlay.deselectCell(this.currentChar))))}onCellLeave(t){this.gamePlay.hideCellTooltip(t)}loadPlayerTeam(a,s,h){const n=m([r,i,l],s,h),c=e(t("hero",a),n.characters.length),d=[];for(let t=0;t<h;t++)d.push(new o(n.characters[t],c[t]));return d}loadEvilTeam(a,s,i){const l=m([h,n,c],s,i),r=e(t("evil",a),l.characters.length),d=[];for(let t=0;t<i;t++)d.push(new o(l.characters[t],r[t]));return d}levelUp(t){return t.forEach((t=>{t.character.level<4&&(t.character.level++,t.character.health<=50&&1!=t.character.health?(t.character.attack=Math.round(1.3*t.character.attack),t.character.defence=Math.round(1.3*t.character.defence)):(t.character.attack=Math.round(Math.max(t.character.attack,t.character.attack*(80+t.character.health)/100)),t.character.defence=Math.round(Math.max(t.character.defence,t.character.defence*(80+t.character.health)/100)))),t.character.health<=20?t.character.health=t.character.health+80:t.character.health=100})),t}newGame(){this.playerTeam=this.loadPlayerTeam(this.gamePlay.boardSize,3,3),this.evilTeam=this.loadEvilTeam(this.gamePlay.boardSize,3,3),this.currentCellId=null,this.currentNpc=void 0,this.currentChar=null,this.stepX=void 0,this.stepY=void 0,this.evilTeamStep=new f(this.gamePlay.boardSize),this.round=0,this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam])}loadGame(){const t=this.stateService.load();this.playerTeam=t.player,this.evilTeam=t.evil,this.round=t.round,this.gamePlay.drawUi(Object.entries(a)[this.round][1]),this.gamePlay.redrawPositions([...this.playerTeam,...this.evilTeam])}saveGame(){this.stateService.save({player:this.playerTeam,evil:this.evilTeam,round:this.round})}}(C,P);T.init()})();